<#@ template hostspecific="true" debug="true" #>
<#@ output extension="/" #>
<#@ include file="..\..\T4\Common.ttinclude" #>
<#
    string source = LoadText(ext: "h");

    var T4 = GetT4();
    T4.GenerateFile("nsStyle.nsIWidget.conv.cs", () => GenerateStyle(source));
    T4.Process();
#>

<#+ void GenerateStyle (string source) { #>
//
// Generated file. Do not edit manually.
//

namespace Alba.CsCss.Style
{
    internal partial class nsStyle
    {
<#+   foreach (string define in ConvertStyleDefines(source)) { #>
        <#= define #>
<#+   } #>
    }
}
<#+ } /* void GenerateStyle */ #>

<#+
    IEnumerable<string> ConvertStyleDefines (string source)
    {
        foreach (Match m in source.ReMatches(
            @"(?imnx)^
                \#define \ +
                NS_STYLE_ (?<Name>\w+) \ +                                # constant name with NS_STYLE_ prefix
                (?<IntValue>\(? (-?\d+ | 0x[0-9a-f]+ | \d<<\d+) \)?) \ *? # NN or 0xHH or N<<N in optional brackets
                (?<Remainder>\ ? (//.* | /\*.*)? )$                       # one-line or block comment"))
            yield return m.Result("internal const int ${Name} = ${IntValue};${Remainder}");
    }
#>